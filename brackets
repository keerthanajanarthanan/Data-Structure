#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>

struct Node {
    char data;
    struct Node* next;
};

void push(struct Node** head, char data) {
    struct Node* tmpcell = (struct Node*)malloc(sizeof(struct Node));
    if (tmpcell == NULL) {
        printf("Memory allocation failed\n");
        exit(0);
    }
    tmpcell->data = data;
    tmpcell->next = *head;
    *head = tmpcell;
}

char pop(struct Node** head) {
    if (*head == NULL) {
        return '\0';
    }
    struct Node* temp = *head;
    char data = temp->data;
    *head = temp->next;
    free(temp);
    return data;
}

bool isEmpty(struct Node* head) {
    return head == NULL;
}

bool isValid(char* s) {
    int len = strlen(s);
    if (len % 2 != 0) {
        return false;
    }

    struct Node* stack = NULL;

    for (int i = 0; i < len; i++) {
        char c = s[i];

        if (c == '(' || c == '{' || c == '[') {
            push(&stack, c);
        } else {
            if (isEmpty(stack)) {
                return false;
            }

            char opening = pop(&stack);

            if ((c == ')' && opening != '(') ||
                (c == '}' && opening != '{') ||
                (c == ']' && opening != '[')) {
                return false;
            }
        }
    }

    return isEmpty(stack);
}

int main() {
    char s[100];

    printf("Enter a string of brackets: ");
    scanf("%s", s);

    if (isValid(s)) {
        printf("Valid\n");
    } else {
        printf("Invalid\n");
    }

    return 0;
}
